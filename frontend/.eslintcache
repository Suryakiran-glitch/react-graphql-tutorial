[{"E:\\practice\\graphql-react\\frontend\\src\\index.js":"1","E:\\practice\\graphql-react\\frontend\\src\\reportWebVitals.js":"2","E:\\practice\\graphql-react\\frontend\\src\\Apollo\\ApolloProvider.js":"3","E:\\practice\\graphql-react\\frontend\\src\\App.js":"4","E:\\practice\\graphql-react\\frontend\\src\\components\\Menu.jsx":"5","E:\\practice\\graphql-react\\frontend\\src\\pages\\Login.jsx":"6","E:\\practice\\graphql-react\\frontend\\src\\pages\\Register.jsx":"7","E:\\practice\\graphql-react\\frontend\\src\\pages\\Home.jsx":"8","E:\\practice\\graphql-react\\frontend\\src\\components\\Spinner.jsx":"9","E:\\practice\\graphql-react\\frontend\\src\\components\\PostCard.jsx":"10"},{"size":469,"mtime":1611822709460,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1608647957379,"results":"13","hashOfConfig":"12"},{"size":405,"mtime":1611826977282,"results":"14","hashOfConfig":"12"},{"size":629,"mtime":1611830489330,"results":"15","hashOfConfig":"12"},{"size":1494,"mtime":1611850409940,"results":"16","hashOfConfig":"12"},{"size":1651,"mtime":1611849124192,"results":"17","hashOfConfig":"12"},{"size":2378,"mtime":1611845449336,"results":"18","hashOfConfig":"12"},{"size":2243,"mtime":1611850351734,"results":"19","hashOfConfig":"12"},{"size":233,"mtime":1611828774208,"results":"20","hashOfConfig":"12"},{"size":1384,"mtime":1611831178320,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"vksvgu",{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"E:\\practice\\graphql-react\\frontend\\src\\index.js",["46"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport ApolloProvider from './Apollo/ApolloProvider';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  ApolloProvider,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n",["47","48"],"E:\\practice\\graphql-react\\frontend\\src\\reportWebVitals.js",[],"E:\\practice\\graphql-react\\frontend\\src\\Apollo\\ApolloProvider.js",[],["49","50"],"E:\\practice\\graphql-react\\frontend\\src\\App.js",[],"E:\\practice\\graphql-react\\frontend\\src\\components\\Menu.jsx",[],"E:\\practice\\graphql-react\\frontend\\src\\pages\\Login.jsx",["51"],"E:\\practice\\graphql-react\\frontend\\src\\pages\\Register.jsx",[],"E:\\practice\\graphql-react\\frontend\\src\\pages\\Home.jsx",[],"E:\\practice\\graphql-react\\frontend\\src\\components\\Spinner.jsx",[],"E:\\practice\\graphql-react\\frontend\\src\\components\\PostCard.jsx",["52"],"import React from 'react'\r\nimport {Card , Image ,Icon , Button , Label} from 'semantic-ui-react'\r\nimport moment from 'moment'\r\nimport {Link} from 'react-router-dom'\r\n\r\nconst PostCard = ({post}) => {\r\n const {_id , createdat , body , likescount , commentscount , likes} = post\r\n\r\n const likePost = () => {\r\n\r\n }\r\n\r\n const createComment = () => {\r\n  \r\n }\r\n \r\n\r\n return (\r\n  <Card fluid as={Link} to={`post/${_id}`}>\r\n  <Image src='https://react.semantic-ui.com/images/avatar/large/matthew.png' wrapped ui={false} />\r\n  <Card.Content>\r\n    <Card.Header>{_id}</Card.Header>\r\n    <Card.Meta>\r\n      <span className='date'>{moment(createdat).fromNow()}</span>\r\n    </Card.Meta>\r\n    <Card.Description>\r\n      {body}\r\n    </Card.Description>\r\n  </Card.Content>\r\n  <Card.Content extra>\r\n  <Button as='div' labelPosition='right'>\r\n      <Button color='red' onClick={likePost}>\r\n        <Icon name='heart' />\r\n        Like\r\n      </Button>\r\n      <Label as='a' basic color='red' pointing='left'>\r\n        {likescount}\r\n      </Label>\r\n    </Button>\r\n    <Button as='div' labelPosition='left'>\r\n      <Button color='blue' onClick={createComment}>\r\n        <Icon name='comments' />\r\n        Comments\r\n      </Button>\r\n      <Label as='a' basic color='reblued' pointing='left'>\r\n        {commentscount}\r\n      </Label>\r\n    </Button>\r\n  </Card.Content>\r\n</Card>\r\n )\r\n}\r\n\r\nexport default PostCard\r\n",{"ruleId":"53","severity":1,"message":"54","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":13},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","replacedBy":"60"},{"ruleId":"57","replacedBy":"61"},{"ruleId":"59","replacedBy":"62"},{"ruleId":"53","severity":1,"message":"63","line":2,"column":34,"nodeType":"55","messageId":"56","endLine":2,"endColumn":38},{"ruleId":"53","severity":1,"message":"64","line":7,"column":63,"nodeType":"55","messageId":"56","endLine":7,"endColumn":68},"no-unused-vars","'React' is defined but never used.","Identifier","unusedVar","no-native-reassign",["65"],"no-negated-in-lhs",["66"],["65"],["66"],"'Grid' is defined but never used.","'likes' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]